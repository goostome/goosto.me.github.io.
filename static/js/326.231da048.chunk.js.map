{"version":3,"file":"static/js/326.231da048.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","common/SvgIcon/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { SvgIconProps } from \"../types\";\r\n\r\nexport const SvgIcon = ({ src, width, height }: SvgIconProps) => (\r\n  <img src={`/img/svg/${src}`} alt={src} width={width} height={height} />\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 6rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","fixedWidth","children","onClick","_jsx","SvgIcon","src","width","height","concat","alt","LeftContentSection","Content","_templateObject2","ContentWrapper","_templateObject3","ServiceWrapper","_templateObject4","MinTitle","_templateObject5","MinPara","_templateObject6","withTranslation","icon","title","content","section","t","id","Fade","direction","_jsxs","Row","justify","align","Col","lg","md","sm","xs","map","item","span","RightBlockContainer","ButtonWrapper","button","document","getElementById","scrollIntoView","behavior","scrollTo","props","type","LeftContentBlock","RightContentBlock"],"sourceRoot":""}